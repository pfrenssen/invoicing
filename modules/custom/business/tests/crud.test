<?php

/**
 * @file
 * Contains \BusinessCRUDTestCase.
 */

invoicing_core_autoload();

/**
 * CRUD tests for the Business module.
 */
class BusinessCRUDTestCase extends InvoicingIntegrationTestCase {

  use \Drupal\invoicing\Traits\BaseTestHelper;
  use \Drupal\invoicing\Traits\BusinessTestHelper;

  /**
   * {@inheritdoc}
   */
  protected $usersToCreate = array();

  /**
   * Returns test case metadata.
   */
  public static function getInfo() {
    return array(
      'name' => 'CRUD test',
      'description' => 'Tests the creating, reading, updating and deleting of businesses.',
      'group' => 'Invoicing - Business',
    );
  }

  /**
   * Tests creating, reading, updating and deleting of businesses.
   */
  public function testBusinessCrud() {
    // Check that the database table exists and is empty.
    $this->assertTrue(db_table_exists('business'), 'The business database table exists.');
    $this->assertBusinessTableEmpty('The business database is initially empty.');

    // Check if a new business can be saved to the database.
    $values = $this->randomBusinessValues();
    $business = $this->createBusiness($values);
    $business->save();
    $this->assertBusinessTableNotEmpty('The business database table is no longer empty after creating a business.');

    // Check that the business data can be read from the database.
    $retrieved_business = business_load($business->bid);
    $this->assertBusinessProperties($retrieved_business, $values, 'The business that was saved to the database can be read correctly.');

    // Update the business and check that the new values were written to the
    // database.
    $new_values = $this->randomBusinessValues();
    $this->updateBusiness($business, $new_values);
    $business->save();
    $this->assertBusinessProperties($business, $new_values, 'The business has been updated correctly.');

    // Delete the business. The database should be empty again.
    $business->delete();
    $this->assertBusinessTableEmpty('The business can be deleted from the database.');
  }

}
