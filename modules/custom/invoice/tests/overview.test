<?php

/**
 * @file
 * Tests the invoice overview.
 */

module_load_include('inc', 'test_traits', 'base');
module_load_include('inc', 'test_traits', 'invoice');

class InvoiceOverviewTestCase extends InvoicingIntegrationTestCase {
  use BaseTestHelper;
  use InvoiceTestHelper;

  /**
   * {@inheritdoc}
   */
  protected $usersToCreate = array('business owner');

  /**
   * An array of test invoices.
   *
   * @var array
   */
  protected $invoices;

  /**
   * Returns test case metadata.
   */
  public static function getInfo() {
    return array(
      'name' => 'Overview test',
      'description' => 'Tests the invoices overview.',
      'group' => 'Invoicing - Invoice',
    );
  }

  /**
   * {@inheritdoc}
   */
  protected function setUp() {
    parent::setup();

    $this->drupalLogin($this->users['business owner']);

    // Create a business and link it to the business owner.
    // @todo The business should be created when the user creates the account.
    // @see http://atrium.pocomas.be/node/1184
    $business = entity_metadata_wrapper('business', $this->createBusiness());
    $business->save();
    $user = entity_metadata_wrapper('user', $this->users['business owner']);
    $user->field_user_businesses->set(array($business->getIdentifier()));
    $user->save();

    // Create a number of test invoices.
    for ($i = 0; $i < 20; $i++) {
      $invoice = $this->createInvoice();
      $invoice->bid = $business->getIdentifier();
      $invoice->save();
      $this->invoices[$invoice->iid] = $invoice;
    }
  }

  /**
   * Tests the invoice overview.
   *
   * @var SimpleXMLElement $tablerow
   */
  public function testOverview() {
    $this->drupalGet('invoices');

    // Check that the "Add invoice" local action is present.
    $xpath = '//ul[@class="action-links"]/li/a[@href="/invoice/add" and contains(text(), :text)]';
    $this->assertXPathElements($xpath, 1, array(':text' => t('Add invoice')), 'The "Add invoice" local action is present.');

    // Check that the pager is not present. We added 20 invoices which is the
    // maximum number that fits on one page.
    $this->assertNoPager().

    // Loop over the displayed table rows and compare them with each business in
    // order.
    $tablerows = $this->xpath('//div[contains(@class, "view-invoices")]//table//tbody/tr');
    foreach ($tablerows as $tablerow) {
      /* @var $tablerow SimpleXMLElement */
      /* @var $invoice EntityDrupalWrapper */
      $invoice = entity_metadata_wrapper('invoice', array_shift($this->invoices));
      $client = $invoice->field_invoice_client->value();
      $testcases = array(
        array(
          'message' => 'The first column contains the invoice number.',
          'expected' => $invoice->field_invoice_number->value(),
          'actual' => (string) $tablerow->td[0],
        ),
        array(
          'message' => 'The second column contains the client.',
          'expected' => $client->name,
          'actual' => (string) $tablerow->td[1],
        ),
        array(
          'message' => 'The third column contains the date.',
          'expected' => format_date($invoice->field_invoice_date->value(), 'custom', 'l, F j, Y'),
          'actual' => (string) $tablerow->td[2]->span[0],
        ),
      );

      foreach ($testcases as $testcase) {
        $this->assertEqual(trim($testcase['expected']), trim($testcase['actual']), $testcase['message']);
      }
    }

    // Check that all invoices were displayed.
    $this->assertFalse($this->invoices, 'All invoices are shown in the table.');

    // Add one more invoice and assert that a pager now appears.
    $this->createUIInvoice();
    $this->drupalGet('invoices');
    $this->assertPager();

    // Create a different user with the role business owner and verify it does
    // not see the invoices created by another business owner.
    $business_owner = $this->drupalCreateUserWithRole('business owner');
    $business = $this->createBusiness();
    $business->save();
    $this->addBusinessToUser($business, $business_owner);
    $this->drupalLogin($business_owner);

    $this->drupalGet('invoices');
    // Check that the "Add invoice" local action is present.
    $xpath = '//ul[@class="action-links"]/li/a[@href="/invoice/add" and contains(text(), :text)]';
    $this->assertXPathElements($xpath, 1, array(':text' => t('Add invoice')), 'The "Add invoice" local action is present.');
    $this->assertFalse($this->xpath('//div[contains(@class, "view-invoices")]//table'), 'The table containing invoices is not shown when no invoice is linked to the user.');

  }

}
