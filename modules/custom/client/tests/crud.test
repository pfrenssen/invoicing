<?php

/**
 * @file
 * CRUD tests for the Client module.
 */

class ClientCRUDTestCase extends DrupalWebTestCase {
  /**
   * {@inheritdoc}
   */
  protected $profile = 'testing';

  /**
   * Returns test case metadata.
   */
  public static function getInfo() {
    return array(
      'name' => 'CRUD test',
      'description' => 'Tests the creating, reading, updating and deleting of clients.',
      'group' => 'Client',
    );
  }

  /**
   * Tests creating, reading, updating and deleting of clients.
   */
  public function testClientCRUD() {
    module_load_include('inc', 'test_traits', 'client');
    module_load_include('inc', 'test_traits', 'base');

    // Check that the database table exists and is empty.
    $this->assertTrue(db_table_exists('client'), 'The client database table exists.');
    $this->assertClientTableEmpty('The client database is initially empty.');

    // Check if a new client can be saved to the database.
    $values = $this->randomClientValues();
    $client = $this->createClient($values);
    $client->save();
    $this->assertClientTableNotEmpty('The client database table is no longer empty after creating a client.');

    // Check that the client data can be read from the database.
    $retrieved_client = client_load($client->cid);
    $this->assertClientProperties($retrieved_client, $values, 'The client that was saved to the database can be read correctly.');

    // Update the client and check that the new values were written to the
    // database.
    $new_values = $this->randomClientValues();
    $this->updateClient($client, $new_values);
    $client->save();
    $this->assertClientProperties($client, $new_values, 'The client has been updated correctly.');

    // Delete the client. The database should be empty again.
    $client->delete();
    $this->assertClientTableEmpty('The client can be deleted from the database.');
  }

}
