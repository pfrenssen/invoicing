<?php

/**
 * @file
 * Install, uninstall, update and schema hooks for Invoicing tax rate.
 */

/**
 * Implements hook_schema().
 */
function tax_rate_schema() {
  $schema = array();

  $schema['tax_rate'] = array(
    'description' => 'The table containing the taxt rates.',
    'fields' => array(
      'tid' => array(
        'description' => 'The primary identifier for a tax rate.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'type' => array(
        'description' => 'The {tax_rate_type}.type of this tax rate.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
      ),
      'bid' => array(
        'description' => 'The business that uses the tax rate.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'name' => array(
        'description' => 'The name of the tax rate.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'rate' => array(
        'description' => 'The rate of the tax rate, eg 21%.',
        'type' => 'varchar',
        'length' => 20,
        'not null' => TRUE,
        'default' => '',
      ),
    ),
    'primary key' => array('tid'),
    'foreign keys' => array(
      'bid' => array(
        'table' => 'business',
        'columns' => array('bid' => 'bid'),
      ),
    ),
    'indexes' => array(
      'type' => array('type'),
    ),
  );

  $schema['tax_rate_type'] = array(
    'description' => 'Stores information about defined tax rate types.',
    'fields' => array(
      'type' => array(
        'description' => 'The machine-readable name of this tax rate type.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
      ),
      'name' => array(
        'description' => 'The human-readable name of this tax rate type.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
        'translatable' => TRUE,
      ),
      'status' => array(
        'type' => 'int',
        'not null' => TRUE,
        // Set the default to ENTITY_CUSTOM without using the constant as it is
        // not safe to use it at this point.
        'default' => 0x01,
        'size' => 'tiny',
        'description' => 'The exportable status of the entity.',
      ),
      'module' => array(
        'description' => 'The name of the providing module if the entity has been defined in code.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('type'),
  );

  return $schema;
}
